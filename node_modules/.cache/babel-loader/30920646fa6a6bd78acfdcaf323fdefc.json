{"ast":null,"code":"import _classCallCheck from\"/Users/mateuszmielcarek/Documents/public_html/en/mat/wp-content/reactpress/apps/num-format-err/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/mateuszmielcarek/Documents/public_html/en/mat/wp-content/reactpress/apps/num-format-err/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/mateuszmielcarek/Documents/public_html/en/mat/wp-content/reactpress/apps/num-format-err/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/mateuszmielcarek/Documents/public_html/en/mat/wp-content/reactpress/apps/num-format-err/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from\"react\";import Selector from\"./selector\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Calculator=/*#__PURE__*/function(_React$Component){_inherits(Calculator,_React$Component);var _super=_createSuper(Calculator);function Calculator(){var _this;_classCallCheck(this,Calculator);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={selectors:[{id:1,lab:\"Error type:\",opt1:\"Rel.\",opt2:\"Abs.\"},{id:2,lab:\"Number notation:\",opt1:\"Std.\",opt2:\"Sci.\"},{id:3,lab:\"Error notation:\",opt1:\" ±\",opt2:\" ()\"}]};return _this;}_createClass(Calculator,[{key:\"render\",value:// Render method\nfunction render(){var _this2=this;return/*#__PURE__*/_jsxs(\"div\",{className:\"Container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-sm-4\",children:/*#__PURE__*/_jsx(\"form\",{children:/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Number to format:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"1.23E+3 or 1230\",className:\"form-control\"}),/*#__PURE__*/_jsx(\"small\",{className:\"form-text text-muted\",children:\"Use dot [.] or comma [,] as a decimal separator.\"})]})})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-sm-2\",children:/*#__PURE__*/_jsxs(\"form\",{children:[/*#__PURE__*/_jsx(\"label\",{children:\"Error:\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-group\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"input-group-prepend\",children:/*#__PURE__*/_jsx(\"span\",{className:\"input-group-text\",children:\"\\xB1\"})}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"form-control\"})]})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-sm-2\",children:/*#__PURE__*/_jsx(Selector,{selector:this.state.selectors[0]},0)})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-sm-4\",children:/*#__PURE__*/_jsx(\"form\",{children:/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Formatted number:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"form-control\",readOnly:true})]})})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-sm-2\",children:/*#__PURE__*/_jsx(Selector,{selector:this.state.selectors[1]},1)}),/*#__PURE__*/_jsx(\"div\",{className:\"col-sm-2\",children:/*#__PURE__*/_jsx(Selector,{selector:this.state.selectors[2]},2)})]}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return _this2.props.onDelete(_this2.props.counter.id);}//onDelete is a property of Counter component called in Counters component.\n// Here only the property onDelete of the counter, defined in counters component is called - <raising event handlers>\n// The reference must be given as an arrow function, as we need to pass an id of the counter to be deleted.\n// If instead of \"this.props.counter.id\" we would add 1, always counter of id 1 would be deleted.\n,className:\"btn btn-danger m-2\",children:\"Delete\"})]});}// Method to change button classes on click to make it a selector.\n},{key:\"changeButtonClass\",value:function changeButtonClass(){var classes=\"btn btn-sm btn-\";classes+=this.props.counter.value===0?\"primary\":\"secondary\";// If counter value is 0 add \"Warning\", else add \"primary\".\nreturn classes;}// Method to format counter based on value.\n},{key:\"formatCount\",value:function formatCount(){// Object destructuring - picking a single property of an object and store it in a const.\nvar value=this.props.counter.value;return value===0?\"Zero\":value;// Instead of plain text \"Zero\" it is also possible to return a JSX expression: <h1>Zero</h1>.\n// Constant (const) can also store JSX expression. const x = <h1>Zero</h1>\n}///////////////////////////////////////////////////////////\n//   //[USAGE OF <componentDidMount>]\n//   // Called after component is rendered into the DOM. Place to call data form the server.\n//   componentDidMount() {\n// //Ajax Call\n//     this.setState({data from the server})\n//   }\n}]);return Calculator;}(React.Component);export default Calculator;","map":{"version":3,"sources":["/Users/mateuszmielcarek/Documents/public_html/en/mat/wp-content/reactpress/apps/num-format-err/src/components/calculator.jsx"],"names":["React","Component","Selector","Calculator","state","selectors","id","lab","opt1","opt2","props","onDelete","counter","classes","value"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Selector from \"./selector\";\n\nclass Calculator extends React.Component {\n  state = {\n    selectors: [\n      { id: 1, lab: \"Error type:\", opt1: \"Rel.\", opt2: \"Abs.\" },\n      { id: 2, lab: \"Number notation:\", opt1: \"Std.\", opt2: \"Sci.\" },\n      {\n        id: 3,\n        lab: \"Error notation:\",\n        opt1: \" ±\",\n        opt2: \" ()\",\n      },\n    ],\n  };\n  // Render method\n  render() {\n    return (\n      <div className=\"Container\">\n        <div className=\"row\">\n          <div className=\"col-sm-4\">\n            {/*---------------------------------------------------------------------INPUTS*/}\n            <form>\n              <div className=\"form-group\">\n                <label>Number to format:</label>\n                <input\n                  type=\"text\"\n                  placeholder=\"1.23E+3 or 1230\"\n                  className=\"form-control\"\n                />\n                <small className=\"form-text text-muted\">\n                  Use dot [.] or comma [,] as a decimal separator.\n                </small>\n              </div>\n            </form>\n          </div>\n          <div className=\"col-sm-2\">\n            <form>\n              <label>Error:</label>\n              <div className=\"input-group\">\n                <div className=\"input-group-prepend\">\n                  <span className=\"input-group-text\">±</span>\n                </div>\n                <input type=\"text\" className=\"form-control\" />\n              </div>\n            </form>\n          </div>\n          <div className=\"col-sm-2\">\n            <Selector key={0} selector={this.state.selectors[0]}></Selector>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-sm-4\">\n            <form>\n              <div className=\"form-group\">\n                <label>Formatted number:</label>\n                <input type=\"text\" className=\"form-control\" readOnly />\n              </div>\n            </form>\n          </div>\n          <div className=\"col-sm-2\">\n            {/*---------------------------------------------------------------------SELECTORS*/}\n            <Selector key={1} selector={this.state.selectors[1]}></Selector>\n            {/* {this.state.selectors.map((selector) => (\n              <Selector key={selector.id} selector={selector}></Selector>\n            ))} */}\n          </div>\n          <div className=\"col-sm-2\">\n            {/*---------------------------------------------------------------------SELECTORS*/}\n            <Selector key={2} selector={this.state.selectors[2]}></Selector>\n          </div>\n        </div>\n\n        {/*---------------------------------------------------------------------DELETE BTN*/}\n        <button\n          onClick={() => this.props.onDelete(this.props.counter.id)} //onDelete is a property of Counter component called in Counters component.\n          // Here only the property onDelete of the counter, defined in counters component is called - <raising event handlers>\n          // The reference must be given as an arrow function, as we need to pass an id of the counter to be deleted.\n          // If instead of \"this.props.counter.id\" we would add 1, always counter of id 1 would be deleted.\n          className=\"btn btn-danger m-2\"\n        >\n          Delete\n        </button>\n      </div>\n    );\n  }\n\n  // Method to change button classes on click to make it a selector.\n  changeButtonClass() {\n    let classes = \"btn btn-sm btn-\";\n    classes += this.props.counter.value === 0 ? \"primary\" : \"secondary\"; // If counter value is 0 add \"Warning\", else add \"primary\".\n    return classes;\n  }\n\n  // Method to format counter based on value.\n  formatCount() {\n    // Object destructuring - picking a single property of an object and store it in a const.\n    const { value: value } = this.props.counter;\n    return value === 0 ? \"Zero\" : value; // Instead of plain text \"Zero\" it is also possible to return a JSX expression: <h1>Zero</h1>.\n    // Constant (const) can also store JSX expression. const x = <h1>Zero</h1>\n  }\n\n  ///////////////////////////////////////////////////////////\n  //   //[USAGE OF <componentDidMount>]\n  //   // Called after component is rendered into the DOM. Place to call data form the server.\n  //   componentDidMount() {\n  // //Ajax Call\n  //     this.setState({data from the server})\n  //   }\n}\n\nexport default Calculator;\n"]},"metadata":{},"sourceType":"module"}