{"ast":null,"code":"import _classCallCheck from\"/Users/Mateusz/Documents/Kodowanie/public_html/en/mat/wp-content/reactpress/apps/num-format-err/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/Mateusz/Documents/Kodowanie/public_html/en/mat/wp-content/reactpress/apps/num-format-err/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/Mateusz/Documents/Kodowanie/public_html/en/mat/wp-content/reactpress/apps/num-format-err/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/Mateusz/Documents/Kodowanie/public_html/en/mat/wp-content/reactpress/apps/num-format-err/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from\"react\";import Selector from\"./selector\";import NumForm from\"./numform\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function rnSig(val,absErr){//round value to appropriate count of significant digits based on absolute error\nvar t=Math.floor(Math.log10(0.5/absErr));//calc number of fractional significant digits based on absolute error\nvar ord=Math.floor(Math.log10(val));//calc order of magnitude of the number\nvar sig=ord+t+1;//calc number of significant digits by adding t to order of magnitude of the number\nconsole.log(sig);//initiate variables\nvar valSci=val,errSci=absErr,valStr=val,valStrSci=val,errStr=absErr,errStrSci=absErr;//calculate base of scientific notation\nvalSci=valSci/Math.pow(10,ord);errSci=errSci/Math.pow(10,ord);//rounded value in decimal notation\nvalStr=Math.round(valStr/Math.pow(10,-t))*Math.pow(10,-t);//rounded value in scientific notation\nvalStrSci=Math.round(valSci/Math.pow(10,-t-ord))*Math.pow(10,-t-ord);valStrSci=valStrSci.toFixed(t+ord+1);//rounded error in decimal notation\nerrStr=Math.round(errStr/Math.pow(10,-(t+1)))*Math.pow(10,-(t+1));//rounded error in scientific notation\nerrStrSci=errSci.toFixed(t+ord+1);//where abs. error in decimal range, add \"0\" to match decimal places of the error\nif(t>=0){// where\nvalStr=valStr.toFixed(t+1);errStr=errStr.toFixed(t+1);}//return object with formatted values\nreturn{valStr:valStr,errStr:errStr,valStrSci:valStrSci,errStrSci:errStrSci,ord:ord===Infinity?0:ord};}function ConstructString(val,err,errType,sign,notation){//check if inputs can be read as numbers\nif(isNaN(parseFloat(val))||isNaN(parseFloat(err))){return\"Please specify number and error: i.e. 1234 and 0.04.\";}//convert user ipnut to float\nval=parseFloat(val);err=parseFloat(err);var absErr=0,resString=\"\";//calculate relative and absolute error\nif(errType===\"Rel.\"){absErr=val*err;}else{absErr=err;}//check for absErr greater than a number and if absErr is not 0\nif(absErr>0&&absErr<val){//read data from object returned by function rnSig\nvar num=rnSig(val,absErr);var valStr=num.valStr,valStrSci=num.valStrSci,errStr=num.errStr,errStrSci=num.errStrSci,errDigits=(errStr/Math.pow(10,Math.floor(Math.log10(errStr)))).toFixed(0),//absolute error in form of string of least significant digits\nord=num.ord;//construct number representation based on user-selected settings\nif(sign===\"±\"){if(notation===\"Sci.\"){resString=\"(\"+valStrSci+sign+errStrSci+\")\"+\"e\"+(ord>=0?\"+\":\"-\")+ord;}else{resString=valStr+sign+errStr;}}else{if(notation===\"Sci.\"){resString=valStrSci+\"(\"+errDigits+\")\"+\"e\"+(ord>=0?\"+\":\"-\")+ord;}else{resString=valStr+\"(\"+errDigits+\")\";}}return resString;}else{return\"Number shall be greater than its absolute error!\";}}var Calculator=/*#__PURE__*/function(_React$Component){_inherits(Calculator,_React$Component);var _super=_createSuper(Calculator);function Calculator(props){var _this;_classCallCheck(this,Calculator);_this=_super.call(this,props);// this.handleValChange = this.handleValChange.bind(this); // used arrow functions instead\n// this.handleErrChange = this.handleErrChange.bind(this); // used arrow functions instead\n_this.handleValChange=function(val){_this.setState({val:val});// this.setState({ str });\n};_this.handleErrChange=function(err){_this.setState({err:err});// this.setState({ str });\n};_this.handleErrTypeChange=function(errType){_this.setState({errType:errType});};_this.handleSignChange=function(sign){_this.setState({sign:sign});};_this.handleNotationChange=function(notation){_this.setState({notation:notation});};_this.handleResultChange=function(str){_this.setState({str:str});};_this.state={val:\"\",err:\"\",errType:\"Rel.\",notation:\"Std.\",sign:\"±\",selectors:[{id:1,lab:\"Error type:\",opt1:\"Rel.\",opt2:\"Abs.\"},{id:2,lab:\"Number notation:\",opt1:\"Std.\",opt2:\"Sci.\"},{id:3,lab:\"Error notation:\",opt1:\"±\",opt2:\"()\"}],forms:[{id:1,lab:\"Number to format:\",plHold:\"i.e. 1.23E+3 or 1230\",prep:\"\",mess:\"Use dot [.] or comma [,] as a decimal separator.\",readonly:0},{id:2,lab:\"Error:\",plHold:\"i.e. 3E-2 or 0.03\",prep:\"±\",mess:\"\",readonly:0},{id:3,lab:\"Formatted number:\",plHold:\"\",prep:\"\",mess:\"\",readonly:1}//inValue: \"\",\n]};return _this;}_createClass(Calculator,[{key:\"render\",value:// Render method\nfunction render(){var val=this.state.val;var err=this.state.err;var errType=this.state.errType;var sign=this.state.sign;var notation=this.state.notation;var str=ConstructString(val,err,errType,sign,notation);return/*#__PURE__*/ (//IMPORTANT! Bulma's grid system is used to compy with Wordpress theme. Bootstrap is used for styling components.\n_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"columns\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"column is-9 has-text-justified is-hidden-mobile\",children:/*#__PURE__*/_jsxs(\"p\",{children:[\"This tool formats a given number so that it is rounded to an appropriate number of significant digits based on the given uncertainty of the value. If you are interested in the formal and mathematical background, please visit the \",/*#__PURE__*/_jsx(\"a\",{href:\"https://mmielcarek.com/en/mat/rounding_numbers\",children:\" blog.\"})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"column has-text-right\",children:/*#__PURE__*/_jsx(\"button\",{onClick:this.handleCalc//onDelete is a property of Counter component called in Counters component.\n// Here only the property onDelete of the counter, defined in counters component is called - <raising event handlers>\n// The reference must be given as an arrow function, as we need to pass an id of the counter to be deleted.\n// If instead of \"this.props.counter.id\" we would add 1, always counter of id 1 would be deleted.\n,className:\"btn btn-warning w-100\",children:\"Clear input\"})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"columns\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"column is-6\",children:/*#__PURE__*/_jsx(NumForm,{form:this.state.forms[0],onInputChange:this.handleValChange,inp:val},0)}),/*#__PURE__*/_jsx(\"div\",{className:\"column\",children:/*#__PURE__*/_jsx(NumForm,{form:this.state.forms[1],onInputChange:this.handleErrChange,inp:err},1)}),/*#__PURE__*/_jsx(\"div\",{className:\"column\",children:/*#__PURE__*/_jsx(Selector,{selector:this.state.selectors[0],onSelectionChange:this.handleErrTypeChange},0)})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"columns\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"column is-6\",children:/*#__PURE__*/_jsx(NumForm,{form:this.state.forms[2],onSelectionChange:this.handleResultChange,inp:str},2)}),/*#__PURE__*/_jsx(\"div\",{className:\"column\",children:/*#__PURE__*/_jsx(Selector,{selector:this.state.selectors[1],onSelectionChange:this.handleNotationChange},1)}),/*#__PURE__*/_jsx(\"div\",{className:\"column\",children:/*#__PURE__*/_jsx(Selector,{selector:this.state.selectors[2],onSelectionChange:this.handleSignChange},2)})]}),/*#__PURE__*/_jsx(\"hr\",{className:\"w-100\"})]}));}// Method to change button classes on click to make it a selector.\n},{key:\"changeButtonClass\",value:function changeButtonClass(){var classes=\"btn btn-sm btn-\";classes+=this.props.counter.value===0?\"primary\":\"secondary\";// If counter value is 0 add \"Warning\", else add \"primary\".\nreturn classes;}// Method to format counter based on value.\n},{key:\"formatCount\",value:function formatCount(){// Object destructuring - picking a single property of an object and store it in a const.\nvar value=this.props.counter.value;return value===0?\"Zero\":value;// Instead of plain text \"Zero\" it is also possible to return a JSX expression: <h1>Zero</h1>.\n// Constant (const) can also store JSX expression. const x = <h1>Zero</h1>\n}///////////////////////////////////////////////////////////\n//   //[USAGE OF <componentDidMount>]\n//   // Called after component is rendered into the DOM. Place to call data form the server.\n//   componentDidMount() {\n// //Ajax Call\n//     this.setState({data from the server})\n//   }\n}]);return Calculator;}(React.Component);export default Calculator;","map":{"version":3,"sources":["/Users/Mateusz/Documents/Kodowanie/public_html/en/mat/wp-content/reactpress/apps/num-format-err/src/components/calculator.jsx"],"names":["React","Component","Selector","NumForm","rnSig","val","absErr","t","Math","floor","log10","ord","sig","console","log","valSci","errSci","valStr","valStrSci","errStr","errStrSci","round","toFixed","Infinity","ConstructString","err","errType","sign","notation","isNaN","parseFloat","resString","num","errDigits","Calculator","props","handleValChange","setState","handleErrChange","handleErrTypeChange","handleSignChange","handleNotationChange","handleResultChange","str","state","selectors","id","lab","opt1","opt2","forms","plHold","prep","mess","readonly","handleCalc","classes","counter","value"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Selector from \"./selector\";\nimport NumForm from \"./numform\";\n\nfunction rnSig(val, absErr) { //round value to appropriate count of significant digits based on absolute error\n  const t = Math.floor(Math.log10(0.5 / absErr)); //calc number of fractional significant digits based on absolute error\n  const ord = Math.floor(Math.log10(val)) //calc order of magnitude of the number\n  const sig = ord + t + 1; //calc number of significant digits by adding t to order of magnitude of the number\n  console.log(sig)\n  //initiate variables\n  let valSci = val,\n    errSci = absErr,\n    valStr = val,\n    valStrSci = val,\n    errStr = absErr,\n    errStrSci = absErr\n  //calculate base of scientific notation\n  valSci = (valSci / (10 ** ord))\n  errSci = (errSci / (10 ** ord))\n  //rounded value in decimal notation\n  valStr = Math.round(valStr / (10 ** (-t))) * (10 ** (-t));\n  //rounded value in scientific notation\n  valStrSci = Math.round(valSci / (10 ** (-t - ord))) * (10 ** (-t - ord));\n  valStrSci = valStrSci.toFixed(t + ord + 1);\n  //rounded error in decimal notation\n  errStr = Math.round(errStr / (10 ** -(t + 1))) * (10 ** -(t + 1));\n  //rounded error in scientific notation\n  errStrSci = errSci.toFixed(t + ord + 1);\n  //where abs. error in decimal range, add \"0\" to match decimal places of the error\n  if (t >= 0) { // where\n    valStr = valStr.toFixed(t + 1);\n    errStr = errStr.toFixed(t + 1);\n  }\n  //return object with formatted values\n  return {\n    valStr: valStr,\n    errStr: errStr,\n    valStrSci: valStrSci,\n    errStrSci: errStrSci,\n    ord: ord === Infinity ? 0 : ord\n  };\n}\n\nfunction ConstructString(val, err, errType, sign, notation) {\n  //check if inputs can be read as numbers\n  if (isNaN(parseFloat(val)) || isNaN(parseFloat(err))) {\n    return \"Please specify number and error: i.e. 1234 and 0.04.\"\n  }\n\n  //convert user ipnut to float\n  val = parseFloat(val)\n  err = parseFloat(err)\n  let absErr = 0,\n    resString = \"\";\n\n  //calculate relative and absolute error\n  if (errType === \"Rel.\") {\n    absErr = val * err;\n  }\n  else {\n    absErr = err;\n  }\n\n  //check for absErr greater than a number and if absErr is not 0\n  if (absErr > 0 && absErr < val) {\n    //read data from object returned by function rnSig\n    const num = rnSig(val, absErr);\n    const\n      valStr = num.valStr,\n      valStrSci = num.valStrSci,\n      errStr = num.errStr,\n      errStrSci = num.errStrSci,\n      errDigits = (errStr / (10 ** Math.floor(Math.log10(errStr)))).toFixed(0), //absolute error in form of string of least significant digits\n      ord = num.ord\n\n    //construct number representation based on user-selected settings\n    if (sign === \"±\") {\n      if (notation === \"Sci.\") {\n\n        resString = \"(\" + valStrSci + sign + errStrSci + \")\" + \"e\" + (ord >= 0 ? \"+\" : \"-\") + ord\n      }\n      else {\n        resString = valStr + sign + errStr\n      }\n    }\n    else {\n      if (notation === \"Sci.\") {\n        resString = valStrSci + \"(\" + errDigits + \")\" + \"e\" + (ord >= 0 ? \"+\" : \"-\") + ord\n      }\n      else {\n        resString = valStr + \"(\" + errDigits + \")\"\n      }\n    }\n    return resString\n  }\n  else {\n    return \"Number shall be greater than its absolute error!\"\n  }\n}\n\nclass Calculator extends React.Component {\n  constructor(props) {\n    super(props);\n    // this.handleValChange = this.handleValChange.bind(this); // used arrow functions instead\n    // this.handleErrChange = this.handleErrChange.bind(this); // used arrow functions instead\n    this.state = {\n      val: \"\", err: \"\", errType: \"Rel.\", notation: \"Std.\", sign: \"±\",\n      selectors: [\n        { id: 1, lab: \"Error type:\", opt1: \"Rel.\", opt2: \"Abs.\" },\n        { id: 2, lab: \"Number notation:\", opt1: \"Std.\", opt2: \"Sci.\" },\n        {\n          id: 3,\n          lab: \"Error notation:\",\n          opt1: \"±\",\n          opt2: \"()\",\n        },\n      ],\n      forms: [\n        {\n          id: 1,\n          lab: \"Number to format:\",\n          plHold: \"i.e. 1.23E+3 or 1230\",\n          prep: \"\",\n          mess: \"Use dot [.] or comma [,] as a decimal separator.\",\n          readonly: 0,\n        },\n        { id: 2, lab: \"Error:\", plHold: \"i.e. 3E-2 or 0.03\", prep: \"±\", mess: \"\", readonly: 0, },\n        { id: 3, lab: \"Formatted number:\", plHold: \"\", prep: \"\", mess: \"\", readonly: 1, }, //inValue: \"\",\n      ],\n    };\n  }\n\n  handleValChange = (val) => {\n    this.setState({ val });\n    // this.setState({ str });\n  }\n\n  handleErrChange = (err) => {\n    this.setState({ err });\n    // this.setState({ str });\n  }\n\n  handleErrTypeChange = (errType) => {\n    this.setState({ errType });\n  }\n\n  handleSignChange = (sign) => {\n    this.setState({ sign });\n  }\n\n  handleNotationChange = (notation) => {\n    this.setState({ notation });\n  }\n\n  handleResultChange = (str) => {\n    this.setState({ str });\n  }\n\n  // Render method\n  render() {\n    const val = this.state.val;\n    const err = this.state.err;\n    const errType = this.state.errType;\n    const sign = this.state.sign;\n    const notation = this.state.notation;\n    const str = ConstructString(val, err, errType, sign, notation)\n    return (\n      //IMPORTANT! Bulma's grid system is used to compy with Wordpress theme. Bootstrap is used for styling components.\n      <div>\n        <div className=\"columns\">\n          <div className=\"column is-9 has-text-justified is-hidden-mobile\">\n            <p>\n              This tool formats a given number so that it is rounded to\n              an appropriate number of significant digits based on the given\n              uncertainty of the value. If you are interested in the formal\n              and mathematical background, please visit the <a href=\"https://mmielcarek.com/en/mat/rounding_numbers\"> blog.</a>\n            </p>\n          </div>\n          <div className=\"column has-text-right\">\n            <button\n              onClick={this.handleCalc} //onDelete is a property of Counter component called in Counters component.\n              // Here only the property onDelete of the counter, defined in counters component is called - <raising event handlers>\n              // The reference must be given as an arrow function, as we need to pass an id of the counter to be deleted.\n              // If instead of \"this.props.counter.id\" we would add 1, always counter of id 1 would be deleted.\n              className=\"btn btn-warning w-100\"\n            >\n              Clear input\n            </button>\n          </div>\n        </div>\n        <div className=\"columns\">\n          <div className=\"column is-6\">\n            {/*---------------------------------------------------------------------INPUT - NUMBER*/}\n            <NumForm key={0} form={this.state.forms[0]} onInputChange={this.handleValChange} inp={val}></NumForm>\n          </div>\n          {/*---------------------------------------------------------------------INPUT - ERROR*/}\n          <div className=\"column\">\n            <NumForm key={1} form={this.state.forms[1]} onInputChange={this.handleErrChange} inp={err}></NumForm>\n          </div>\n          <div className=\"column\">\n            {/*---------------------------------------------------------------------SELECTOR - ERR*/}\n            <Selector key={0} selector={this.state.selectors[0]} onSelectionChange={this.handleErrTypeChange}></Selector>\n          </div>\n        </div>\n        <div className=\"columns\">\n          {/*---------------------------------------------------------------------INPUT - FORM. NUMBER*/}\n          <div className=\"column is-6\">\n            <NumForm key={2} form={this.state.forms[2]} onSelectionChange={this.handleResultChange} inp={str}></NumForm>\n          </div>\n          <div className=\"column\">\n            {/*---------------------------------------------------------------------SELECTOR - NUM NOTATION*/}\n            <Selector key={1} selector={this.state.selectors[1]} onSelectionChange={this.handleNotationChange}></Selector>\n            {/* {this.state.selectors.map((selector) => (\n              <Selector key={selector.id} selector={selector}></Selector>\n            ))} */}\n          </div>\n          <div className=\"column\">\n            {/*---------------------------------------------------------------------SELECTORS - ERR NOTATION*/}\n            <Selector key={2} selector={this.state.selectors[2]} onSelectionChange={this.handleSignChange}></Selector>\n          </div>\n        </div>\n        {/* <div className=\"columns\">\n          <div className=\"column is-6\">\n            <BoilingVerdict\n              celsius={parseFloat(val)} />\n          </div>\n        </div> */}\n\n        {/*---------------------------------------------------------------------DELETE BTN*/}\n        <hr className=\"w-100\" />\n      </div >\n    );\n  }\n\n  // Method to change button classes on click to make it a selector.\n  changeButtonClass() {\n    let classes = \"btn btn-sm btn-\";\n    classes += this.props.counter.value === 0 ? \"primary\" : \"secondary\"; // If counter value is 0 add \"Warning\", else add \"primary\".\n    return classes;\n  }\n\n  // Method to format counter based on value.\n  formatCount() {\n    // Object destructuring - picking a single property of an object and store it in a const.\n    const { value: value } = this.props.counter;\n    return value === 0 ? \"Zero\" : value; // Instead of plain text \"Zero\" it is also possible to return a JSX expression: <h1>Zero</h1>.\n    // Constant (const) can also store JSX expression. const x = <h1>Zero</h1>\n  }\n\n  ///////////////////////////////////////////////////////////\n  //   //[USAGE OF <componentDidMount>]\n  //   // Called after component is rendered into the DOM. Place to call data form the server.\n  //   componentDidMount() {\n  // //Ajax Call\n  //     this.setState({data from the server})\n  //   }\n}\n\nexport default Calculator;\n"]},"metadata":{},"sourceType":"module"}