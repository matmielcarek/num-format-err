{"ast":null,"code":"var _jsxFileName = \"/Users/Mateusz/Documents/Kodowanie/public_html/en/mat/wp-content/reactpress/apps/num-format-err/src/components/calculator.jsx\";\nimport React, { Component } from \"react\";\nimport Selector from \"./selector\";\nimport NumForm from \"./numform\"; // function BoilingVerdict(props) {\n//   if (props.celsius >= 100) {\n//     return <p>The water would boil.</p>;\n//   }\n//   return <p>The water would not boil.</p>;\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction rnSig(val, absErr) {\n  const t = Math.log10(0.5 / absErr);\n}\n\nfunction ConstructString(val, err, errType, sign, notation) {\n  if (isNaN(parseFloat(val)) || isNaN(parseFloat(err))) {\n    return \"\";\n  }\n\n  val = parseFloat(val);\n  err = parseFloat(err);\n  let absErr = 0;\n  let relErr = 0;\n  let resString = \"\";\n\n  if (errType === \"Rel.\") {\n    absErr = val * err;\n    relErr = err;\n  } else {\n    absErr = err;\n    relErr = err / val;\n  }\n\n  const valExp = val.toExponential(3);\n  const absErrExp = absErr.toExponential(3);\n\n  if (sign === \"±\") {\n    if (notation === \"Sci.\") {\n      resString = valExp + sign + absErrExp;\n    } else {\n      resString = val + sign + absErr;\n    }\n  } else {\n    if (notation === \"Sci.\") {\n      resString = val + \"(\" + absErrExp + \")\";\n    } else {\n      resString = val + \"(\" + absErr + \")\";\n    }\n  }\n\n  return resString;\n}\n\n_c = ConstructString;\n\nclass Calculator extends React.Component {\n  constructor(props) {\n    super(props); // this.handleValChange = this.handleValChange.bind(this); // used arrow functions instead\n    // this.handleErrChange = this.handleErrChange.bind(this); // used arrow functions instead\n\n    this.handleValChange = val => {\n      this.setState({\n        val\n      }); // this.setState({ str });\n    };\n\n    this.handleErrChange = err => {\n      this.setState({\n        err\n      }); // this.setState({ str });\n    };\n\n    this.handleErrTypeChange = errType => {\n      this.setState({\n        errType\n      });\n    };\n\n    this.handleSignChange = sign => {\n      this.setState({\n        sign\n      });\n    };\n\n    this.handleNotationChange = notation => {\n      this.setState({\n        notation\n      });\n    };\n\n    this.handleResultChange = str => {\n      this.setState({\n        str\n      });\n    };\n\n    this.state = {\n      val: \"\",\n      err: \"\",\n      errType: \"Rel.\",\n      notation: \"Std.\",\n      sign: \"±\",\n      selectors: [{\n        id: 1,\n        lab: \"Error type:\",\n        opt1: \"Rel.\",\n        opt2: \"Abs.\"\n      }, {\n        id: 2,\n        lab: \"Number notation:\",\n        opt1: \"Std.\",\n        opt2: \"Sci.\"\n      }, {\n        id: 3,\n        lab: \"Error notation:\",\n        opt1: \"±\",\n        opt2: \"()\"\n      }],\n      forms: [{\n        id: 1,\n        lab: \"Number to format:\",\n        plHold: \"i.e. 1.23E+3 or 1230\",\n        prep: \"\",\n        mess: \"Use dot [.] or comma [,] as a decimal separator.\",\n        readonly: 0\n      }, {\n        id: 2,\n        lab: \"Error:\",\n        plHold: \"i.e. 3E-2 or 0.03\",\n        prep: \"±\",\n        mess: \"\",\n        readonly: 0\n      }, {\n        id: 3,\n        lab: \"Formatted number:\",\n        plHold: \"\",\n        prep: \"\",\n        mess: \"\",\n        readonly: 1\n      } //inValue: \"\",\n      ]\n    };\n  }\n\n  // Render method\n  render() {\n    const val = this.state.val;\n    const err = this.state.err;\n    const errType = this.state.errType;\n    const sign = this.state.sign;\n    const notation = this.state.notation;\n    const str = ConstructString(val, err, errType, sign, notation);\n    return (\n      /*#__PURE__*/\n      //IMPORTANT! Bulma's grid system is used to compy with Wordpress theme. Bootstrap is used for styling components.\n      _jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"columns\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"column is-9 has-text-justified is-hidden-mobile\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"This tool formats given number so that it is rounded to appropiate number of significant digits based on given uncertainty of the value. If you are interested in formal and mathematical background, please visit the \", /*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"https://mmielcarek.com/en/mat/rounding_numbers\",\n                children: \" blog.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 68\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"column has-text-right\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: this.handleCalc //onDelete is a property of Counter component called in Counters component.\n              // Here only the property onDelete of the counter, defined in counters component is called - <raising event handlers>\n              // The reference must be given as an arrow function, as we need to pass an id of the counter to be deleted.\n              // If instead of \"this.props.counter.id\" we would add 1, always counter of id 1 would be deleted.\n              ,\n              className: \"btn btn-warning w-100\",\n              children: \"Clear input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"columns\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"column is-6\",\n            children: /*#__PURE__*/_jsxDEV(NumForm, {\n              form: this.state.forms[0],\n              onInputChange: this.handleValChange,\n              inp: val\n            }, 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"column\",\n            children: /*#__PURE__*/_jsxDEV(NumForm, {\n              form: this.state.forms[1],\n              onInputChange: this.handleErrChange,\n              inp: err\n            }, 1, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"column\",\n            children: /*#__PURE__*/_jsxDEV(Selector, {\n              selector: this.state.selectors[0],\n              onSelectionChange: this.handleErrTypeChange\n            }, 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"columns\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"column is-6\",\n            children: /*#__PURE__*/_jsxDEV(NumForm, {\n              form: this.state.forms[2],\n              onSelectionChange: this.handleResultChange,\n              inp: str\n            }, 2, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"column\",\n            children: /*#__PURE__*/_jsxDEV(Selector, {\n              selector: this.state.selectors[1],\n              onSelectionChange: this.handleNotationChange\n            }, 1, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"column\",\n            children: /*#__PURE__*/_jsxDEV(Selector, {\n              selector: this.state.selectors[2],\n              onSelectionChange: this.handleSignChange\n            }, 2, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n          className: \"w-100\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 7\n      }, this)\n    );\n  } // Method to change button classes on click to make it a selector.\n\n\n  changeButtonClass() {\n    let classes = \"btn btn-sm btn-\";\n    classes += this.props.counter.value === 0 ? \"primary\" : \"secondary\"; // If counter value is 0 add \"Warning\", else add \"primary\".\n\n    return classes;\n  } // Method to format counter based on value.\n\n\n  formatCount() {\n    // Object destructuring - picking a single property of an object and store it in a const.\n    const {\n      value: value\n    } = this.props.counter;\n    return value === 0 ? \"Zero\" : value; // Instead of plain text \"Zero\" it is also possible to return a JSX expression: <h1>Zero</h1>.\n    // Constant (const) can also store JSX expression. const x = <h1>Zero</h1>\n  } ///////////////////////////////////////////////////////////\n  //   //[USAGE OF <componentDidMount>]\n  //   // Called after component is rendered into the DOM. Place to call data form the server.\n  //   componentDidMount() {\n  // //Ajax Call\n  //     this.setState({data from the server})\n  //   }\n\n\n}\n\nexport default Calculator;\n\nvar _c;\n\n$RefreshReg$(_c, \"ConstructString\");","map":{"version":3,"sources":["/Users/Mateusz/Documents/Kodowanie/public_html/en/mat/wp-content/reactpress/apps/num-format-err/src/components/calculator.jsx"],"names":["React","Component","Selector","NumForm","rnSig","val","absErr","t","Math","log10","ConstructString","err","errType","sign","notation","isNaN","parseFloat","relErr","resString","valExp","toExponential","absErrExp","Calculator","constructor","props","handleValChange","setState","handleErrChange","handleErrTypeChange","handleSignChange","handleNotationChange","handleResultChange","str","state","selectors","id","lab","opt1","opt2","forms","plHold","prep","mess","readonly","render","handleCalc","changeButtonClass","classes","counter","value","formatCount"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Selector from \"./selector\";\nimport NumForm from \"./numform\";\n\n// function BoilingVerdict(props) {\n//   if (props.celsius >= 100) {\n//     return <p>The water would boil.</p>;\n//   }\n//   return <p>The water would not boil.</p>;\n// }\n\nfunction rnSig(val, absErr) {\n  const t = Math.log10(0.5 / absErr)\n\n}\n\nfunction ConstructString(val, err, errType, sign, notation) {\n  if (isNaN(parseFloat(val)) || isNaN(parseFloat(err))) {\n    return \"\"\n  }\n  val = parseFloat(val)\n  err = parseFloat(err)\n  let absErr = 0\n  let relErr = 0\n  let resString = \"\"\n  if (errType === \"Rel.\") {\n    absErr = val * err\n    relErr = err\n  }\n  else {\n    absErr = err\n    relErr = err / val\n  }\n  const valExp = val.toExponential(3);\n  const absErrExp = absErr.toExponential(3);\n  if (sign === \"±\") {\n    if (notation === \"Sci.\") {\n      resString = valExp + sign + absErrExp\n    }\n    else {\n      resString = val + sign + absErr\n    }\n  }\n  else {\n    if (notation === \"Sci.\") {\n      resString = val + \"(\" + absErrExp + \")\"\n    }\n    else {\n      resString = val + \"(\" + absErr + \")\"\n    }\n  }\n  return resString\n}\n\n\nclass Calculator extends React.Component {\n  constructor(props) {\n    super(props);\n    // this.handleValChange = this.handleValChange.bind(this); // used arrow functions instead\n    // this.handleErrChange = this.handleErrChange.bind(this); // used arrow functions instead\n    this.state = {\n      val: \"\", err: \"\", errType: \"Rel.\", notation: \"Std.\", sign: \"±\",\n      selectors: [\n        { id: 1, lab: \"Error type:\", opt1: \"Rel.\", opt2: \"Abs.\" },\n        { id: 2, lab: \"Number notation:\", opt1: \"Std.\", opt2: \"Sci.\" },\n        {\n          id: 3,\n          lab: \"Error notation:\",\n          opt1: \"±\",\n          opt2: \"()\",\n        },\n      ],\n      forms: [\n        {\n          id: 1,\n          lab: \"Number to format:\",\n          plHold: \"i.e. 1.23E+3 or 1230\",\n          prep: \"\",\n          mess: \"Use dot [.] or comma [,] as a decimal separator.\",\n          readonly: 0,\n        },\n        { id: 2, lab: \"Error:\", plHold: \"i.e. 3E-2 or 0.03\", prep: \"±\", mess: \"\", readonly: 0, },\n        { id: 3, lab: \"Formatted number:\", plHold: \"\", prep: \"\", mess: \"\", readonly: 1, }, //inValue: \"\",\n      ],\n    };\n  }\n\n  handleValChange = (val) => {\n    this.setState({ val });\n    // this.setState({ str });\n  }\n\n  handleErrChange = (err) => {\n    this.setState({ err });\n    // this.setState({ str });\n  }\n\n  handleErrTypeChange = (errType) => {\n    this.setState({ errType });\n  }\n\n  handleSignChange = (sign) => {\n    this.setState({ sign });\n  }\n\n  handleNotationChange = (notation) => {\n    this.setState({ notation });\n  }\n\n  handleResultChange = (str) => {\n    this.setState({ str });\n  }\n\n  // Render method\n  render() {\n    const val = this.state.val;\n    const err = this.state.err;\n    const errType = this.state.errType;\n    const sign = this.state.sign;\n    const notation = this.state.notation;\n    const str = ConstructString(val, err, errType, sign, notation)\n    return (\n      //IMPORTANT! Bulma's grid system is used to compy with Wordpress theme. Bootstrap is used for styling components.\n      <div>\n        <div className=\"columns\">\n          <div className=\"column is-9 has-text-justified is-hidden-mobile\">\n            <p>\n              This tool formats given number so that it is\n              rounded to appropiate number of significant digits based on given\n              uncertainty of the value. If you are interested in\n              formal and mathematical background, please visit the <a href=\"https://mmielcarek.com/en/mat/rounding_numbers\"> blog.</a>\n            </p>\n          </div>\n          <div className=\"column has-text-right\">\n            <button\n              onClick={this.handleCalc} //onDelete is a property of Counter component called in Counters component.\n              // Here only the property onDelete of the counter, defined in counters component is called - <raising event handlers>\n              // The reference must be given as an arrow function, as we need to pass an id of the counter to be deleted.\n              // If instead of \"this.props.counter.id\" we would add 1, always counter of id 1 would be deleted.\n              className=\"btn btn-warning w-100\"\n            >\n              Clear input\n            </button>\n          </div>\n        </div>\n        <div className=\"columns\">\n          <div className=\"column is-6\">\n            {/*---------------------------------------------------------------------INPUT - NUMBER*/}\n            <NumForm key={0} form={this.state.forms[0]} onInputChange={this.handleValChange} inp={val}></NumForm>\n          </div>\n          {/*---------------------------------------------------------------------INPUT - ERROR*/}\n          <div className=\"column\">\n            <NumForm key={1} form={this.state.forms[1]} onInputChange={this.handleErrChange} inp={err}></NumForm>\n          </div>\n          <div className=\"column\">\n            {/*---------------------------------------------------------------------SELECTOR - ERR*/}\n            <Selector key={0} selector={this.state.selectors[0]} onSelectionChange={this.handleErrTypeChange}></Selector>\n          </div>\n        </div>\n        <div className=\"columns\">\n          {/*---------------------------------------------------------------------INPUT - FORM. NUMBER*/}\n          <div className=\"column is-6\">\n            <NumForm key={2} form={this.state.forms[2]} onSelectionChange={this.handleResultChange} inp={str}></NumForm>\n          </div>\n          <div className=\"column\">\n            {/*---------------------------------------------------------------------SELECTOR - NUM NOTATION*/}\n            <Selector key={1} selector={this.state.selectors[1]} onSelectionChange={this.handleNotationChange}></Selector>\n            {/* {this.state.selectors.map((selector) => (\n              <Selector key={selector.id} selector={selector}></Selector>\n            ))} */}\n          </div>\n          <div className=\"column\">\n            {/*---------------------------------------------------------------------SELECTORS - ERR NOTATION*/}\n            <Selector key={2} selector={this.state.selectors[2]} onSelectionChange={this.handleSignChange}></Selector>\n          </div>\n        </div>\n        {/* <div className=\"columns\">\n          <div className=\"column is-6\">\n            <BoilingVerdict\n              celsius={parseFloat(val)} />\n          </div>\n        </div> */}\n\n        {/*---------------------------------------------------------------------DELETE BTN*/}\n        <hr className=\"w-100\" />\n      </div >\n    );\n  }\n\n  // Method to change button classes on click to make it a selector.\n  changeButtonClass() {\n    let classes = \"btn btn-sm btn-\";\n    classes += this.props.counter.value === 0 ? \"primary\" : \"secondary\"; // If counter value is 0 add \"Warning\", else add \"primary\".\n    return classes;\n  }\n\n  // Method to format counter based on value.\n  formatCount() {\n    // Object destructuring - picking a single property of an object and store it in a const.\n    const { value: value } = this.props.counter;\n    return value === 0 ? \"Zero\" : value; // Instead of plain text \"Zero\" it is also possible to return a JSX expression: <h1>Zero</h1>.\n    // Constant (const) can also store JSX expression. const x = <h1>Zero</h1>\n  }\n\n  ///////////////////////////////////////////////////////////\n  //   //[USAGE OF <componentDidMount>]\n  //   // Called after component is rendered into the DOM. Place to call data form the server.\n  //   componentDidMount() {\n  // //Ajax Call\n  //     this.setState({data from the server})\n  //   }\n}\n\nexport default Calculator;\n"]},"metadata":{},"sourceType":"module"}