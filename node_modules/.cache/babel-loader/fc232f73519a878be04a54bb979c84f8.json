{"ast":null,"code":"import _classCallCheck from\"/Users/mateuszmielcarek/Documents/public_html/en/mat/wp-content/reactpress/apps/num-format-err/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/mateuszmielcarek/Documents/public_html/en/mat/wp-content/reactpress/apps/num-format-err/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/mateuszmielcarek/Documents/public_html/en/mat/wp-content/reactpress/apps/num-format-err/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/mateuszmielcarek/Documents/public_html/en/mat/wp-content/reactpress/apps/num-format-err/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from\"react\";import Calculator from\"./calculator\";// Import a child component from \"components\" folder. It actually adds new html tag that we can use in JSX.\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var CalculatorList=/*#__PURE__*/function(_React$Component){_inherits(CalculatorList,_React$Component);var _super=_createSuper(CalculatorList);function CalculatorList(){_classCallCheck(this,CalculatorList);return _super.apply(this,arguments);}_createClass(CalculatorList,[{key:\"render\",value:function render(){var _this$props=this.props,onReset=_this$props.onReset,counters=_this$props.counters,onDelete=_this$props.onDelete,onIncrement=_this$props.onIncrement,onDecrement=_this$props.onDecrement;// instead of repeating this.props.counter.(...) we define a constant\nreturn/*#__PURE__*/_jsxs(\"div\",{children:[counters.map(function(counter){return/*#__PURE__*/_jsx(Calculator,{onDelete:onDelete// here we only refer to onDelete property set in parent App.jsx, same as we did in counter component.\n,onIncrement:onIncrement,onDecrement:onDecrement// value={counter.value}\n// id={counter.id}\n,counter:counter//counter object is carrying all the data about the counter - do not need to pass all the props separately\n},counter.id);}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-primary btn-small m-2\",onClick:onReset,children:\"Clear\"})]});}}]);return CalculatorList;}(React.Component);export default CalculatorList;","map":{"version":3,"sources":["/Users/mateuszmielcarek/Documents/public_html/en/mat/wp-content/reactpress/apps/num-format-err/src/components/calculator_list.jsx"],"names":["React","Component","Calculator","CalculatorList","props","onReset","counters","onDelete","onIncrement","onDecrement","map","counter","id"],"mappings":"orBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,UAAP,KAAuB,cAAvB,CAAuC;2FAEjCC,CAAAA,c,iRACJ,iBAAS,CACP,gBACE,KAAKC,KADP,CAAQC,OAAR,aAAQA,OAAR,CAAiBC,QAAjB,aAAiBA,QAAjB,CAA2BC,QAA3B,aAA2BA,QAA3B,CAAqCC,WAArC,aAAqCA,WAArC,CAAkDC,WAAlD,aAAkDA,WAAlD,CAEA;AACA,mBACE,uBACGH,QAAQ,CAACI,GAAT,CAAa,SAACC,OAAD,qBACZ,KAAC,UAAD,EAEE,QAAQ,CAAEJ,QAAU;AAFtB,CAGE,WAAW,CAAEC,WAHf,CAIE,WAAW,CAAEC,WACb;AACA;AANF,CAOE,OAAO,CAAEE,OAAS;AAPpB,EACOA,OAAO,CAACC,EADf,CADY,EAAb,CADH,cAcE,eAAQ,SAAS,CAAC,+BAAlB,CAAkD,OAAO,CAAEP,OAA3D,mBAdF,GADF,CAoBD,C,4BAzB0BL,KAAK,CAACC,S,EA4BnC,cAAeE,CAAAA,cAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Calculator from \"./calculator\"; // Import a child component from \"components\" folder. It actually adds new html tag that we can use in JSX.\n\nclass CalculatorList extends React.Component {\n  render() {\n    const { onReset, counters, onDelete, onIncrement, onDecrement } =\n      this.props;\n    // instead of repeating this.props.counter.(...) we define a constant\n    return (\n      <div>\n        {counters.map((counter) => (\n          <Calculator\n            key={counter.id}\n            onDelete={onDelete} // here we only refer to onDelete property set in parent App.jsx, same as we did in counter component.\n            onIncrement={onIncrement}\n            onDecrement={onDecrement}\n            // value={counter.value}\n            // id={counter.id}\n            counter={counter} //counter object is carrying all the data about the counter - do not need to pass all the props separately\n          >\n            {/* <h4>Counter #{counter.id}</h4> */}\n          </Calculator>\n        ))}\n        <button className=\"btn btn-primary btn-small m-2\" onClick={onReset}>\n          Clear\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default CalculatorList;\n"]},"metadata":{},"sourceType":"module"}